#-------------------------------------------------------------------
# This file was automatically generated by ProjectGenerator
# which is tooling part the build system designed for GUCEF
#     (Galaxy Unlimited Framework)
# For the latest info, see http://www.VanvelzenSoftware.com/
#
# The contents of this file are placed in the public domain. Feel
# free to make use of it in any way you like.
#-------------------------------------------------------------------
#

# Configuration for module: bsltf

set( HEADER_FILES 
  bsltf_allocargumenttype.h
  bsltf_allocbitwisemoveabletesttype.h
  bsltf_allocemplacabletesttype.h
  bsltf_alloctesttype.h
  bsltf_argumenttype.h
  bsltf_bitwisecopyabletesttype.h
  bsltf_bitwisemoveabletesttype.h
  bsltf_convertiblevaluewrapper.h
  bsltf_degeneratefunctor.h
  bsltf_emplacabletesttype.h
  bsltf_enumeratedtesttype.h
  bsltf_evilbooleantype.h
  bsltf_movablealloctesttype.h
  bsltf_movabletesttype.h
  bsltf_moveonlyalloctesttype.h
  bsltf_movestate.h
  bsltf_nonassignabletesttype.h
  bsltf_noncopyconstructibletesttype.h
  bsltf_nondefaultconstructibletesttype.h
  bsltf_nonequalcomparabletesttype.h
  bsltf_nonoptionalalloctesttype.h
  bsltf_nontypicaloverloadstesttype.h
  bsltf_simpletesttype.h
  bsltf_stdallocatoradaptor.h
  bsltf_stdalloctesttype.h
  bsltf_stdstatefulallocator.h
  bsltf_stdtestallocator.h
  bsltf_templatetestfacility.h
  bsltf_testvaluesarray.h
  bsltf_uniontesttype.h
)

set( SOURCE_FILES 
  bsltf_allocargumenttype.cpp
  bsltf_allocbitwisemoveabletesttype.cpp
  bsltf_allocemplacabletesttype.cpp
  bsltf_alloctesttype.cpp
  bsltf_argumenttype.cpp
  bsltf_bitwisecopyabletesttype.cpp
  bsltf_bitwisemoveabletesttype.cpp
  bsltf_convertiblevaluewrapper.cpp
  bsltf_degeneratefunctor.cpp
  bsltf_emplacabletesttype.cpp
  bsltf_enumeratedtesttype.cpp
  bsltf_evilbooleantype.cpp
  bsltf_movablealloctesttype.cpp
  bsltf_movabletesttype.cpp
  bsltf_moveonlyalloctesttype.cpp
  bsltf_movestate.cpp
  bsltf_nonassignabletesttype.cpp
  bsltf_noncopyconstructibletesttype.cpp
  bsltf_nondefaultconstructibletesttype.cpp
  bsltf_nonequalcomparabletesttype.cpp
  bsltf_nonoptionalalloctesttype.cpp
  bsltf_nontypicaloverloadstesttype.cpp
  bsltf_simpletesttype.cpp
  bsltf_stdallocatoradaptor.cpp
  bsltf_stdalloctesttype.cpp
  bsltf_stdstatefulallocator.cpp
  bsltf_stdtestallocator.cpp
  bsltf_templatetestfacility.cpp
  bsltf_testvaluesarray.cpp
  bsltf_uniontesttype.cpp
)

# Make sure the PLATFORM_HEADER_FILES variable is always defined
 set( PLATFORM_HEADER_FILES "" )

# Make sure the PLATFORM_SOURCE_FILES variable is always defined
 set( PLATFORM_SOURCE_FILES "" )

# For ease of use make a variable that has all files for this module
set( ALL_FILES ${HEADER_FILES} ${SOURCE_FILES} ${PLATFORM_HEADER_FILES} ${PLATFORM_SOURCE_FILES} )

set( MODULE_NAME "bsltf" )
add_library( ${MODULE_NAME} STATIC ${ALL_FILES} )
add_dependencies( ${MODULE_NAME} bsls bslscm bslma bslmf )

include_directories( ../../bsl ../../bsl/bsl+bslhdrs ../../bsl/bsl+stdhdrs ../../bsl/bslalg ../../bsl/bsldoc ../../bsl/bslh ../../bsl/bslim ../../bsl/bslma ../../bsl/bslmf ../../bsl/bslmt ../../bsl/bsls ../../bsl/bslscm ../../bsl/bslstl ../../bsl/bsltf ../../bsl/bslx . )
