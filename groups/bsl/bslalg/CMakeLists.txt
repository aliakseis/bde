#-------------------------------------------------------------------
# This file was automatically generated by ProjectGenerator
# which is tooling part the build system designed for GUCEF
#     (Galaxy Unlimited Framework)
# For the latest info, see http://www.VanvelzenSoftware.com/
#
# The contents of this file are placed in the public domain. Feel
# free to make use of it in any way you like.
#-------------------------------------------------------------------
#

# Configuration for module: bslalg

set( HEADER_FILES 
  bslalg_arraydestructionprimitives.h
  bslalg_arrayprimitives.h
  bslalg_autoarraydestructor.h
  bslalg_autoarraymovedestructor.h
  bslalg_autoscalardestructor.h
  bslalg_bidirectionallink.h
  bslalg_bidirectionallinklistutil.h
  bslalg_bidirectionalnode.h
  bslalg_constructorproxy.h
  bslalg_containerbase.h
  bslalg_dequeimputil.h
  bslalg_dequeiterator.h
  bslalg_dequeprimitives.h
  bslalg_functoradapter.h
  bslalg_hashtableanchor.h
  bslalg_hashtablebucket.h
  bslalg_hashtableimputil.h
  bslalg_hashutil.h
  bslalg_hasstliterators.h
  bslalg_hastrait.h
  bslalg_rangecompare.h
  bslalg_rbtreeanchor.h
  bslalg_rbtreenode.h
  bslalg_rbtreeutil.h
  bslalg_scalardestructionprimitives.h
  bslalg_scalarprimitives.h
  bslalg_selecttrait.h
  bslalg_swaputil.h
  bslalg_typetraitbitwisecopyable.h
  bslalg_typetraitbitwiseequalitycomparable.h
  bslalg_typetraitbitwisemoveable.h
  bslalg_typetraithaspointersemantics.h
  bslalg_typetraithasstliterators.h
  bslalg_typetraithastrivialdefaultconstructor.h
  bslalg_typetraitnil.h
  bslalg_typetraitpair.h
  bslalg_typetraits.h
  bslalg_typetraitusesbslmaallocator.h
)

set( SOURCE_FILES 
  bslalg_arraydestructionprimitives.cpp
  bslalg_arrayprimitives.cpp
  bslalg_autoarraydestructor.cpp
  bslalg_autoarraymovedestructor.cpp
  bslalg_autoscalardestructor.cpp
  bslalg_bidirectionallink.cpp
  bslalg_bidirectionallinklistutil.cpp
  bslalg_bidirectionalnode.cpp
  bslalg_constructorproxy.cpp
  bslalg_containerbase.cpp
  bslalg_dequeimputil.cpp
  bslalg_dequeiterator.cpp
  bslalg_dequeprimitives.cpp
  bslalg_functoradapter.cpp
  bslalg_hashtableanchor.cpp
  bslalg_hashtablebucket.cpp
  bslalg_hashtableimputil.cpp
  bslalg_hashutil.cpp
  bslalg_hasstliterators.cpp
  bslalg_hastrait.cpp
  bslalg_rangecompare.cpp
  bslalg_rbtreeanchor.cpp
  bslalg_rbtreenode.cpp
  bslalg_rbtreeutil.cpp
  bslalg_scalardestructionprimitives.cpp
  bslalg_scalarprimitives.cpp
  bslalg_selecttrait.cpp
  bslalg_swaputil.cpp
  bslalg_typetraitbitwisecopyable.cpp
  bslalg_typetraitbitwiseequalitycomparable.cpp
  bslalg_typetraitbitwisemoveable.cpp
  bslalg_typetraithaspointersemantics.cpp
  bslalg_typetraithasstliterators.cpp
  bslalg_typetraithastrivialdefaultconstructor.cpp
  bslalg_typetraitnil.cpp
  bslalg_typetraitpair.cpp
  bslalg_typetraits.cpp
  bslalg_typetraitusesbslmaallocator.cpp
)

# Make sure the PLATFORM_HEADER_FILES variable is always defined
 set( PLATFORM_HEADER_FILES "" )

# Make sure the PLATFORM_SOURCE_FILES variable is always defined
 set( PLATFORM_SOURCE_FILES "" )

# For ease of use make a variable that has all files for this module
set( ALL_FILES ${HEADER_FILES} ${SOURCE_FILES} ${PLATFORM_HEADER_FILES} ${PLATFORM_SOURCE_FILES} )

set( MODULE_NAME "bslalg" )
add_library( ${MODULE_NAME} STATIC ${ALL_FILES} )
add_dependencies( ${MODULE_NAME} bsls bslscm bslma bslmf bsltf )

include_directories( ../../bsl ../../bsl/bsl+bslhdrs ../../bsl/bsl+stdhdrs ../../bsl/bslalg ../../bsl/bsldoc ../../bsl/bslh ../../bsl/bslim ../../bsl/bslma ../../bsl/bslmf ../../bsl/bslmt ../../bsl/bsls ../../bsl/bslscm ../../bsl/bslstl ../../bsl/bsltf ../../bsl/bslx . )
