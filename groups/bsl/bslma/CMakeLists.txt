#-------------------------------------------------------------------
# This file was automatically generated by ProjectGenerator
# which is tooling part the build system designed for GUCEF
#     (Galaxy Unlimited Framework)
# For the latest info, see http://www.VanvelzenSoftware.com/
#
# The contents of this file are placed in the public domain. Feel
# free to make use of it in any way you like.
#-------------------------------------------------------------------
#

# Configuration for module: bslma

set( HEADER_FILES 
  bslma_allocator.h
  bslma_allocatoradaptor.h
  bslma_allocatortraits.h
  bslma_autodeallocator.h
  bslma_autodestructor.h
  bslma_autorawdeleter.h
  bslma_constructionutil.h
  bslma_deallocatorguard.h
  bslma_deallocatorproctor.h
  bslma_default.h
  bslma_defaultallocatorguard.h
  bslma_deleterhelper.h
  bslma_destructionutil.h
  bslma_destructorguard.h
  bslma_destructorproctor.h
  bslma_exceptionguard.h
  bslma_mallocfreeallocator.h
  bslma_managedptr.h
  bslma_managedptrdeleter.h
  bslma_managedptr_factorydeleter.h
  bslma_managedptr_members.h
  bslma_managedptr_pairproxy.h
  bslma_newdeleteallocator.h
  bslma_rawdeleterguard.h
  bslma_rawdeleterproctor.h
  bslma_sharedptrinplacerep.h
  bslma_sharedptroutofplacerep.h
  bslma_sharedptrrep.h
  bslma_stdallocator.h
  bslma_stdtestallocator.h
  bslma_testallocator.h
  bslma_testallocatorexception.h
  bslma_testallocatormonitor.h
  bslma_usesbslmaallocator.h
)

set( SOURCE_FILES 
  bslma_allocator.cpp
  bslma_allocatoradaptor.cpp
  bslma_allocatortraits.cpp
  bslma_autodeallocator.cpp
  bslma_autodestructor.cpp
  bslma_autorawdeleter.cpp
  bslma_constructionutil.cpp
  bslma_deallocatorguard.cpp
  bslma_deallocatorproctor.cpp
  bslma_default.cpp
  bslma_defaultallocatorguard.cpp
  bslma_deleterhelper.cpp
  bslma_destructionutil.cpp
  bslma_destructorguard.cpp
  bslma_destructorproctor.cpp
  bslma_exceptionguard.cpp
  bslma_mallocfreeallocator.cpp
  bslma_managedptr.cpp
  bslma_managedptrdeleter.cpp
  bslma_managedptr_factorydeleter.cpp
  bslma_managedptr_members.cpp
  bslma_managedptr_pairproxy.cpp
  bslma_newdeleteallocator.cpp
  bslma_rawdeleterguard.cpp
  bslma_rawdeleterproctor.cpp
  bslma_sharedptrinplacerep.cpp
  bslma_sharedptroutofplacerep.cpp
  bslma_sharedptrrep.cpp
  bslma_stdallocator.cpp
  bslma_stdtestallocator.cpp
  bslma_testallocator.cpp
  bslma_testallocatorexception.cpp
  bslma_testallocatormonitor.cpp
  bslma_usesbslmaallocator.cpp
)

# Make sure the PLATFORM_HEADER_FILES variable is always defined
 set( PLATFORM_HEADER_FILES "" )

# Make sure the PLATFORM_SOURCE_FILES variable is always defined
 set( PLATFORM_SOURCE_FILES "" )

# For ease of use make a variable that has all files for this module
set( ALL_FILES ${HEADER_FILES} ${SOURCE_FILES} ${PLATFORM_HEADER_FILES} ${PLATFORM_SOURCE_FILES} )

set( MODULE_NAME "bslma" )
add_library( ${MODULE_NAME} STATIC ${ALL_FILES} )
add_dependencies( ${MODULE_NAME} bslmf bslscm bsls )

include_directories( ../../bsl ../../bsl/bsl+bslhdrs ../../bsl/bsl+stdhdrs ../../bsl/bslalg ../../bsl/bsldoc ../../bsl/bslh ../../bsl/bslim ../../bsl/bslma ../../bsl/bslmf ../../bsl/bslmt ../../bsl/bsls ../../bsl/bslscm ../../bsl/bslstl ../../bsl/bsltf ../../bsl/bslx . )
