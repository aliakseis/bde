#-------------------------------------------------------------------
# This file was automatically generated by ProjectGenerator
# which is tooling part the build system designed for GUCEF
#     (Galaxy Unlimited Framework)
# For the latest info, see http://www.VanvelzenSoftware.com/
#
# The contents of this file are placed in the public domain. Feel
# free to make use of it in any way you like.
#-------------------------------------------------------------------
#

# Configuration for module: bdlma

set( HEADER_FILES 
  bdlma_alignedallocator.h
  bdlma_aligningallocator.h
  bdlma_autoreleaser.h
  bdlma_blocklist.h
  bdlma_bufferedsequentialallocator.h
  bdlma_bufferedsequentialpool.h
  bdlma_bufferimputil.h
  bdlma_buffermanager.h
  bdlma_concurrentallocatoradapter.h
  bdlma_concurrentfixedpool.h
  bdlma_concurrentmultipool.h
  bdlma_concurrentmultipoolallocator.h
  bdlma_concurrentpool.h
  bdlma_concurrentpoolallocator.h
  bdlma_countingallocator.h
  bdlma_defaultdeleter.h
  bdlma_deleter.h
  bdlma_factory.h
  bdlma_guardingallocator.h
  bdlma_heapbypassallocator.h
  bdlma_infrequentdeleteblocklist.h
  bdlma_localsequentialallocator.h
  bdlma_managedallocator.h
  bdlma_memoryblockdescriptor.h
  bdlma_multipool.h
  bdlma_multipoolallocator.h
  bdlma_pool.h
  bdlma_sequentialallocator.h
  bdlma_sequentialpool.h
)

set( SOURCE_FILES 
  bdlma_alignedallocator.cpp
  bdlma_aligningallocator.cpp
  bdlma_autoreleaser.cpp
  bdlma_blocklist.cpp
  bdlma_bufferedsequentialallocator.cpp
  bdlma_bufferedsequentialpool.cpp
  bdlma_bufferimputil.cpp
  bdlma_buffermanager.cpp
  bdlma_concurrentallocatoradapter.cpp
  bdlma_concurrentfixedpool.cpp
  bdlma_concurrentmultipool.cpp
  bdlma_concurrentmultipoolallocator.cpp
  bdlma_concurrentpool.cpp
  bdlma_concurrentpoolallocator.cpp
  bdlma_countingallocator.cpp
  bdlma_defaultdeleter.cpp
  bdlma_deleter.cpp
  bdlma_factory.cpp
  bdlma_guardingallocator.cpp
  bdlma_heapbypassallocator.cpp
  bdlma_infrequentdeleteblocklist.cpp
  bdlma_localsequentialallocator.cpp
  bdlma_managedallocator.cpp
  bdlma_memoryblockdescriptor.cpp
  bdlma_multipool.cpp
  bdlma_multipoolallocator.cpp
  bdlma_pool.cpp
  bdlma_sequentialallocator.cpp
  bdlma_sequentialpool.cpp
)

# Make sure the PLATFORM_HEADER_FILES variable is always defined
 set( PLATFORM_HEADER_FILES "" )

# Make sure the PLATFORM_SOURCE_FILES variable is always defined
 set( PLATFORM_SOURCE_FILES "" )

# For ease of use make a variable that has all files for this module
set( ALL_FILES ${HEADER_FILES} ${SOURCE_FILES} ${PLATFORM_HEADER_FILES} ${PLATFORM_SOURCE_FILES} )

set( MODULE_NAME "bdlma" )
add_library( ${MODULE_NAME} STATIC ${ALL_FILES} )
add_dependencies( ${MODULE_NAME} bdlb bdlscm )

include_directories( ../../../thirdparty/decnumber ../../../thirdparty/inteldfp/LIBRARY/float128 ../../../thirdparty/inteldfp/LIBRARY/src/inteldfp ../../../thirdparty/pcre2 ../../../thirdparty/pcre2/sljit ../../bdl ../../bdl/bdlat ../../bdl/bdlb ../../bdl/bdlc ../../bdl/bdlcc ../../bdl/bdld ../../bdl/bdlde ../../bdl/bdldfp ../../bdl/bdlf ../../bdl/bdlma ../../bdl/bdlmt ../../bdl/bdlpcre ../../bdl/bdls ../../bdl/bdlsb ../../bdl/bdlscm ../../bdl/bdlsta ../../bdl/bdlt ../../bsl ../../bsl/bsl+bslhdrs ../../bsl/bsl+stdhdrs ../../bsl/bslalg ../../bsl/bsldoc ../../bsl/bslh ../../bsl/bslim ../../bsl/bslma ../../bsl/bslmf ../../bsl/bslmt ../../bsl/bsls ../../bsl/bslscm ../../bsl/bslstl ../../bsl/bsltf ../../bsl/bslx ../bdlb ../bdlf ../bdlscm . )
