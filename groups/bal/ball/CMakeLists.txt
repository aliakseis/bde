#-------------------------------------------------------------------
# This file was automatically generated by ProjectGenerator
# which is tooling part the build system designed for GUCEF
#     (Galaxy Unlimited Framework)
# For the latest info, see http://www.VanvelzenSoftware.com/
#
# The contents of this file are placed in the public domain. Feel
# free to make use of it in any way you like.
#-------------------------------------------------------------------
#

# Configuration for module: ball

set( HEADER_FILES 
  ball_administration.h
  ball_asyncfileobserver.h
  ball_attribute.h
  ball_attributecontainer.h
  ball_attributecontainerlist.h
  ball_attributecontext.h
  ball_category.h
  ball_categorymanager.h
  ball_context.h
  ball_countingallocator.h
  ball_defaultattributecontainer.h
  ball_defaultobserver.h
  ball_fileobserver.h
  ball_fileobserver2.h
  ball_fixedsizerecordbuffer.h
  ball_log.h
  ball_loggercategoryutil.h
  ball_loggerfunctorpayloads.h
  ball_loggermanager.h
  ball_loggermanagerconfiguration.h
  ball_loggermanagerdefaults.h
  ball_multiplexobserver.h
  ball_observer.h
  ball_observeradapter.h
  ball_patternutil.h
  ball_predicate.h
  ball_predicateset.h
  ball_record.h
  ball_recordattributes.h
  ball_recordbuffer.h
  ball_recordstringformatter.h
  ball_rule.h
  ball_ruleset.h
  ball_scopedattribute.h
  ball_scopedattributes.h
  ball_severity.h
  ball_severityutil.h
  ball_testobserver.h
  ball_thresholdaggregate.h
  ball_transmission.h
  ball_userfields.h
  ball_userfieldtype.h
  ball_userfieldvalue.h
)

set( SOURCE_FILES 
  ball_administration.cpp
  ball_asyncfileobserver.cpp
  ball_attribute.cpp
  ball_attributecontainer.cpp
  ball_attributecontainerlist.cpp
  ball_attributecontext.cpp
  ball_category.cpp
  ball_categorymanager.cpp
  ball_context.cpp
  ball_countingallocator.cpp
  ball_defaultattributecontainer.cpp
  ball_defaultobserver.cpp
  ball_fileobserver.cpp
  ball_fileobserver2.cpp
  ball_fixedsizerecordbuffer.cpp
  ball_log.cpp
  ball_loggercategoryutil.cpp
  ball_loggerfunctorpayloads.cpp
  ball_loggermanager.cpp
  ball_loggermanagerconfiguration.cpp
  ball_loggermanagerdefaults.cpp
  ball_multiplexobserver.cpp
  ball_observer.cpp
  ball_observeradapter.cpp
  ball_patternutil.cpp
  ball_predicate.cpp
  ball_predicateset.cpp
  ball_record.cpp
  ball_recordattributes.cpp
  ball_recordbuffer.cpp
  ball_recordstringformatter.cpp
  ball_rule.cpp
  ball_ruleset.cpp
  ball_scopedattribute.cpp
  ball_scopedattributes.cpp
  ball_severity.cpp
  ball_severityutil.cpp
  ball_testobserver.cpp
  ball_thresholdaggregate.cpp
  ball_transmission.cpp
  ball_userfields.cpp
  ball_userfieldtype.cpp
  ball_userfieldvalue.cpp
)

# Make sure the PLATFORM_HEADER_FILES variable is always defined
 set( PLATFORM_HEADER_FILES "" )

# Make sure the PLATFORM_SOURCE_FILES variable is always defined
 set( PLATFORM_SOURCE_FILES "" )

# For ease of use make a variable that has all files for this module
set( ALL_FILES ${HEADER_FILES} ${SOURCE_FILES} ${PLATFORM_HEADER_FILES} ${PLATFORM_SOURCE_FILES} )

set( MODULE_NAME "ball" )
add_library( ${MODULE_NAME} STATIC ${ALL_FILES} )
add_dependencies( ${MODULE_NAME} balscm )

include_directories( ../../../thirdparty/decnumber ../../../thirdparty/inteldfp/LIBRARY/float128 ../../../thirdparty/inteldfp/LIBRARY/src/inteldfp ../../../thirdparty/pcre2 ../../../thirdparty/pcre2/sljit ../../bal ../../bal/balb ../../bal/balber ../../bal/baljsn ../../bal/balm ../../bal/balscm ../../bal/balst ../../bal/baltzo ../../bal/balxml ../../bdl ../../bdl/bdlat ../../bdl/bdlb ../../bdl/bdlc ../../bdl/bdlcc ../../bdl/bdld ../../bdl/bdlde ../../bdl/bdldfp ../../bdl/bdlf ../../bdl/bdlma ../../bdl/bdlmt ../../bdl/bdlpcre ../../bdl/bdls ../../bdl/bdlsb ../../bdl/bdlscm ../../bdl/bdlsta ../../bdl/bdlt ../../bsl ../../bsl/bsl+bslhdrs ../../bsl/bsl+stdhdrs ../../bsl/bslalg ../../bsl/bsldoc ../../bsl/bslh ../../bsl/bslim ../../bsl/bslma ../../bsl/bslmf ../../bsl/bslmt ../../bsl/bsls ../../bsl/bslscm ../../bsl/bslstl ../../bsl/bsltf ../../bsl/bslx ../balscm . )
